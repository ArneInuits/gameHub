/*
 *  ## TO DO 
 *  ## How are games defined in the GUI? just by a path? see fillGames and makeImage and selectedGame attribute
 * 
 */

package TestPackage;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.net.URL;

public class Gamehub {
	
	private JFrame frame;
	private JPanel centerPanel;
	private JPanel rightPanel;
	private GridBagConstraints constraints;
	
	private Color backgroundColor = Color.getColor("#a0a0a0");
	private String selectedGame = "";
	
	public Gamehub() {
        makeFrame();
        makecenterPanel();
        makeRightPanel();
        makeConstraints();
        // fill center panel
        fillHeader();
        fillGames();
    }	
	
	private void makeFrame() {
		// container which can hold all the components
		frame = new JFrame("Gamehub menu");    		
        // stops when user exits program
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        
        // Maximized size on extended 
        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);  
        // No top bar
        frame.setUndecorated(true);
        //Display the window
        frame.pack();
        frame.setVisible(true);
	}
	
	private void makeRightPanel() {
		rightPanel = new JPanel();
		// temp, until we get some components in it.
		rightPanel.setPreferredSize(new Dimension(400, 400));
		frame.add(rightPanel, BorderLayout.EAST);
	}
	
	private void makecenterPanel() {
		centerPanel = new JPanel(new GridBagLayout());
		
		centerPanel.setBackground(Color.gray);
		frame.add(centerPanel, BorderLayout.CENTER);
	}
	
	private void makeConstraints() {
		constraints = new GridBagConstraints();
	}
	
	
	private void fillHeader() {
		

		constraints.fill = GridBagConstraints.NONE;
		
		JLabel title = makeTitle();
		// anchor left top
		constraints.anchor = GridBagConstraints.FIRST_LINE_START;
		constraints.gridx = 0;
		constraints.gridy = 0;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(title, constraints);
		

		JButton colorPicker = makeColorPicker();
		// anchor top
		constraints.anchor = GridBagConstraints.PAGE_START;
		constraints.gridx = 1;
		constraints.gridy = 0;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(colorPicker, constraints);	
	}
	
	private JLabel makeTitle() {
		URL url = getClass().getResource("/res/menupic.png");
		ImageIcon image = new ImageIcon(url);
		JLabel label = new JLabel(image);
		return label;	    
	}
	
	private JButton makeColorPicker() {
		JButton button = new JButton("Pick a new background color");

		// Make an action listener that will open a JColorChooser when an action is completed
	    ActionListener listener = new ActionListener() {
	    	public void actionPerformed(ActionEvent e) {
	    		centerPanel.setBackground(JColorChooser.showDialog(null, "Change the background", backgroundColor));
	    	}
	    };
	    // Link previous action listener to the button we created
	    button.addActionListener(listener);
	    return button;
	}
	
	//TEMP 
	private void makeHideButton() {
		JButton b = new JButton("Toggle the right panel");
		
		ActionListener listener = new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				rightPanel.setVisible(!rightPanel.isVisible());
			}
		};
		
	    constraints.gridx = 2;
	    constraints.gridy = 0;
	    constraints.weightx = 0.3;
		constraints.ipadx = 0;
		constraints.ipady = 0;
	    
		b.addActionListener(listener);
		centerPanel.add(b, constraints);
	}

	
	private void fillGames() {
		
		constraints.fill = GridBagConstraints.BOTH;
		constraints.anchor = GridBagConstraints.CENTER;
		
		
		JLabel pic1 = makeImage("/res/pic1.png");
		
		constraints.gridx = 0;
		constraints.gridy = 1;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic1, constraints);	
		
		JLabel pic2 = makeImage("/res/pic2.png");

		constraints.gridx = 1;
		constraints.gridy = 1;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic2, constraints);	
		
		JLabel pic3 = makeImage("/res/pic3.png");
		constraints.gridx = 2;
		constraints.gridy = 1;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic3, constraints);	

		JLabel pic4 = makeImage("/res/pic4.png");
		constraints.gridx = 0;
		constraints.gridy = 2;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic4, constraints);	
		
		JLabel pic5 = makeImage("/res/pic5.png");
		constraints.gridx = 1;
		constraints.gridy = 2;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic5, constraints);	

		JLabel pic6 = makeImage("/res/pic6.png");
		constraints.gridx = 2;
		constraints.gridy = 2;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic6, constraints);	

		JLabel pic7 = makeImage("/res/pic7.png");
		constraints.gridx = 0;
		constraints.gridy = 3;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic7, constraints);	
		
		JLabel pic8 = makeImage("/res/pic8.png");
		constraints.gridx = 1;
		constraints.gridy = 3;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic8, constraints);	
		
		JLabel pic9 = makeImage("/res/pic9.png");
		constraints.gridx = 2;
		constraints.gridy = 3;
		constraints.weightx = 1;
		constraints.weighty = 1;
		centerPanel.add(pic9, constraints);	
		
	}
	
	
	private JLabel makeImage(String gamepath) {
		URL url = getClass().getResource(gamepath);
		ImageIcon image = new ImageIcon(url);
		JLabel imagelabel = new JLabel(image);
		// clickable image
		MouseAdapter listener = new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				
				selectedGame = gamepath;
				
			}
		};
		imagelabel.addMouseListener(listener);
		return imagelabel;		
	}
	

	
	

	
	
/*	
	public void setBackgroundColor(Color color, JFrame frame) {
		backgroundColor = color;
		Container c = frame.getContentPane();
		c.setBackground(color);
	}
	
	public Color getBackgroundColor() {
		return backgroundColor;
	}
*/

	
	public static void main(String[] args){
		SwingUtilities.invokeLater(new Runnable() { 
		      public void run() { 
		        new Gamehub();
		      }
		 });
	}
}

